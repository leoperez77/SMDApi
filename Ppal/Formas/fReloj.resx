<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADc2lUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS41LWMwMTQgNzkuMTUxNDgxLCAyMDEzLzAzLzEzLTEyOjA5OjE1ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjg0NThjMjA5LTk4NzktNDU3Ni1hNjE5LWQzY2E0
        MTE3ZDUyNSIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDo4RkVBOEUwN0Y1QjQxMUU0QjE5QUQwNDQ4
        OUM0MkQxNiIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo4RkVBOEUwNkY1QjQxMUU0QjE5QUQwNDQ4
        OUM0MkQxNiIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgKE1hY2ludG9zaCkiPiA8
        eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo4NDU4YzIwOS05ODc5LTQ1
        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
</value>
  </data>
</root>